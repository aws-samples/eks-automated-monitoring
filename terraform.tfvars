#################### Static Alarms Input ######################
clusterName = ""
vpc_id = ""
private_subnet_ids = ""
#################### Dynamic Node Alarms Inputs ###############
auto_scaling_group_name = ""
alarm_prefix = "NodeAlarm"
alarm_list_file_key = "alarm_list_inputs.json"
##################### Inputs for CW Alarms ####################
alarms = {
  efs-csi-node-pod-container-restart = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-container-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "efs-csi-node"}}

  kube-proxy-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "kube-proxy"}}

  aws-node-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "aws-node"}}

  aws-cloudwatch-metrics-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "aws-load-balancer-controller"}}

  metrics-server-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "metrics-server"}}

  coredns-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "coredns"}}

  fluent-bit-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "aws-for-fluent-bit"}}

  cluster-autoscaler-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-continer-restart = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-continer-restart", alarm_description = "This metrics monitor total number of container restarts in a pod per namespace.", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_number_of_container_restarts", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace = "kube-system", PodName = "efs-csi-controller"}}

  NodeMemoryPressure = { create_metric_alarm = "true", alarm_name = "cw-node-memory-pressure", alarm_description = "This metrics monitor Node Memory Pressure.", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "node_status_condition_memory_pressure", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name"}}

  NodePIDPressure = { create_metric_alarm = "true", alarm_name = "cw-node-pid-pressure", alarm_description = "This metrics monitors Node PID pressure", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "node_status_condition_pid_pressure", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name"}}

  NodeDiskPressure = { create_metric_alarm = "true", alarm_name = "cw-node-disk-pressure", alarm_description = "This metrics monitors Node Disk pressure", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "node_status_condition_disk_pressure", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name"}}

  NodeUnknownStatus = { create_metric_alarm = "true", alarm_name = "cw-node-status-unknown", alarm_description = "This metrics monitors If Node condition goes to unknows state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "node_status_condition_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name"}}

  ClusterFailedNodeCount = { create_metric_alarm = "true", alarm_name = "cw-cluster-failedNodeCount", alarm_description = "This metrics monitor node is considered failed if it is suffering from anyÂ node conditions", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "cluster_failed_node_count", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name" }}

  ClusterNodeCount = { create_metric_alarm = "true", alarm_name = "cw-cluster-nodecount", alarm_description = "This metrics monitor The total number of worker nodes in the cluster", comparison_operator = "GreaterThanOrEqualToThreshold", evaluation_periods = 1, threshold = 4, unit = "Count", metric_name = "cluster_node_count", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name" }}

  efs-csi-node-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-node"}}

  kube-proxy-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="kube-proxy"}}

  aws-node-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-node"}}

  aws-cloudwatch-metrics-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-load-balancer-controller"}}

  metrics-server-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="metrics-server"}}

  coredns-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="coredns"}}

  fluent-bit-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-for-fluent-bit"}}

  cluster-autoscaler-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-status-failed = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-status-failed", alarm_description = "This metrics monitors If Pod condition goes to failed state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_failed", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-controller"}}

  efs-csi-node-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-node"}}

  kube-proxy-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="kube-proxy"}}

  aws-node-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-node"}}

  aws-cloudwatch-metrics-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-load-balancer-controller"}}

  metrics-server-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="metrics-server"}}

  coredns-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="coredns"}}

  fluent-bit-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-for-fluent-bit"}}

  cluster-autoscaler-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-status-notready = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-status-notready", alarm_description = "This metrics monitors If Pod condition goes to Not Ready state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_ready", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-controller"}}

  efs-csi-node-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-node"}}

  kube-proxy-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="kube-proxy"}}

  aws-node-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-node"}}

  aws-cloudwatch-metrics-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-load-balancer-controller"}}

  metrics-server-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="metrics-server"}}

  coredns-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-status-notrunningg", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="coredns"}}

  fluent-bit-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-for-fluent-bit"}}

  cluster-autoscaler-pod-status-notrunningg = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-status-notrunning", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-status-notrunning = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-status-notrunningg", alarm_description = "This metrics monitors If Pod goes to Not Running state", comparison_operator = "LessThanThreshold", evaluation_periods = 1, threshold = 1, unit = "Count", metric_name = "pod_status_running", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-controller"}}

  efs-csi-node-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-node"}}

  kube-proxy-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="kube-proxy"}}

  aws-node-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-node"}}

  aws-cloudwatch-metrics-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-load-balancer-controller"}}

  metrics-server-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="metrics-server"}}

  coredns-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="coredns"}}

  fluent-bit-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-for-fluent-bit"}}

  cluster-autoscaler-pod-status-unknownn = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-status-unknown = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-status-unknown", alarm_description = "This metrics monitors If Pod goes to Unknown state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_unknown", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-controller"}}

  efs-csi-node-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-node-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-node"}}

  kube-proxy-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-kube-proxy-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="kube-proxy"}}

  aws-node-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-aws-node-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-node"}}

  aws-cloudwatch-metrics-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-aws-cloudwatch-metrics-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-cloudwatch-metrics"}}

  aws-load-balancer-controller-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-aws-load-balancer-controller-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-load-balancer-controller"}}

  metrics-server-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-metrics-server-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="metrics-server"}}

  coredns-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-coredns-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="coredns"}}

  fluent-bit-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-fluent-bit-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="aws-for-fluent-bit"}}

  cluster-autoscaler-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-cluster-autoscaler-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="cluster-autoscaler-aws-cluster-autoscaler"}}

  efs-csi-controller-pod-status-pending = { create_metric_alarm = "true", alarm_name = "cw-efs-csi-controller-pod-status-pending", alarm_description = "This metrics monitors If Pod goes to Pending state", comparison_operator = "GreaterThanThreshold", evaluation_periods = 1, threshold = 0, unit = "Count", metric_name = "pod_status_pending", namespace = "ContainerInsights", period = 300, statistic = "Maximum", actions_enabled = "true", datapoints_to_alarm = 1, treat_missing_data = "missing", dimensions = { ClusterName = "Cluster_Name", Namespace="kube-system", PodName="efs-csi-controller"}}

}
